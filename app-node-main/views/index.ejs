<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Controle de Pagamentos</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
        }
        h1, h2 { text-align: center; }
        table, th, td {
            border: 2px solid #000000;
            border-radius: 10px;
            border-collapse: collapse;
        }
        td, th {
            padding: 10px;
            text-align: center;
        }
        form {
            width: 320px;
            margin: 20px auto;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: #f9f9f9;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        form label, form input, form select {
            width: 100%;
            margin-bottom: 10px;
        }
        form input[type="text"], form input[type="number"], form select {
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
            height: 35px;
            box-sizing: border-box;
        }
        form button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        form button:hover { background-color: #45a049; }
        #search-bar {
            width: 300px;
            padding: 8px;
            margin-bottom: 15px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
            text-align: center;
        }
        .totais {
            margin-top: 20px;
            font-size: 16px;
            text-align: center;
        }

        /* Modal de edição */
        .modal {
            display: none;
            position: fixed;
            z-index: 10;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.6);
        }
        .modal-content {
            background-color: white;
            margin: auto;
            padding: 20px;
            border-radius: 10px;
            width: 400px;
            max-width: 90%;
            position: relative;
            top: 50%;
            transform: translateY(-50%);
        }
        .close {
            color: red;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: darkred;
        }
    </style>

    <!-- jsPDF CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
</head>
<body>
    <h1>Cadastro de Pagamento</h1>

    <button id="btnGerarPdf" style="margin-bottom: 15px; padding: 10px 20px; font-size: 16px; cursor:pointer;">
      Gerar PDF de Presença
    </button>

    <form action="/criar-pagamento" method="POST">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome" placeholder="Digite o nome" required>

        <label for="forma_pagamento">Forma de Pagamento:</label>
        <select id="forma_pagamento" name="forma_pagamento" required>
            <option value="">Selecione</option>
            <option value="PIX">PIX</option>
            <option value="Dinheiro">Dinheiro</option>
        </select>

        <label for="valor_pago">Valor Pago (R$):</label>
        <input type="number" id="valor_pago" name="valor_pago" step="0.01" required>

        <label>
            <input type="checkbox" name="presente"> Presente
        </label>

        <label for="acompanhante">Acompanhante:</label>
        <select id="acompanhante" name="acompanhante">
            <option value="">Sem acompanhante</option>
            <% listaPessoas.forEach(p => { %>
                <option value="<%= p.id %>"><%= p.nome %></option>
            <% }) %>
        </select>

        <button type="submit">Cadastrar</button>
    </form>

    <input type="text" id="search-bar" placeholder="Pesquisar por nome..." onkeyup="searchUser()">

    <h2>Pagamentos Cadastrados</h2>
    <table id="pagamentosTable">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Forma de Pagamento</th>
                <th>Valor</th>
                <th>Presente</th>
                <th>Acompanhante</th>
                <th>Editar</th>
                <th>Excluir</th>
            </tr>
        </thead>
        <tbody>
        <% pagamentos.forEach(p => { 
            const acomp = listaPessoas.find(x => x.id === p.acompanhante);
        %>
            <tr>
                <td><%= p.nome %></td>
                <td><%= p.forma_pagamento %></td>
                <td><%= p.valor_pago %></td>
                <td><%= p.presente ? 'Sim' : 'Não' %></td>
                <td><%= acomp ? acomp.nome : '-' %></td>
                <td><a href="#" onclick="openModal('<%= p.id %>', '<%= p.nome %>', '<%= p.forma_pagamento %>', '<%= p.valor_pago %>', <%= p.presente ? 'true' : 'false' %>, '<%= acomp ? acomp.id : '' %>')">Editar</a></td>
                <td><a href="/deletar-pagamento/<%= p.id %>">Deletar</a></td>
            </tr>
        <% }) %>
        </tbody>
    </table>

    <div class="totais">
        <p><strong>Total via PIX:</strong> R$ <span id="totalPix">0.00</span></p>
        <p><strong>Total em Dinheiro:</strong> R$ <span id="totalDinheiro">0.00</span></p>
    </div>

    <!-- Modal de edição -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Editar Pagamento</h2>
            <form id="editForm" action="/editar-pagamento" method="POST">
                <input type="hidden" id="editId" name="id">

                <label for="editNome">Nome:</label>
                <input type="text" id="editNome" name="nome" required>

                <label for="editFormaPagamento">Forma de Pagamento:</label>
                <select id="editFormaPagamento" name="forma_pagamento" required>
                    <option value="PIX">PIX</option>
                    <option value="Dinheiro">Dinheiro</option>
                </select>

                <label for="editValorPago">Valor Pago (R$):</label>
                <input type="number" id="editValorPago" name="valor_pago" step="0.01" required>

                <label>
                    <input type="checkbox" id="editPresente" name="presente"> Presente
                </label>

                <label for="editAcompanhante">Acompanhante:</label>
                <select id="editAcompanhante" name="acompanhante">
                    <option value="">Sem acompanhante</option>
                    <% listaPessoas.forEach(p => { %>
                        <option value="<%= p.id %>"><%= p.nome %></option>
                    <% }) %>
                </select>

                <button type="submit">Salvar</button>
            </form>
        </div>
    </div>

    <script>
        // Função para abrir modal preenchendo os dados
        function openModal(id, nome, forma_pagamento, valor_pago, presente, acompanhante) {
            document.getElementById('editId').value = id;
            document.getElementById('editNome').value = nome;
            document.getElementById('editFormaPagamento').value = forma_pagamento;
            document.getElementById('editValorPago').value = valor_pago;
            document.getElementById('editPresente').checked = presente;
            document.getElementById('editAcompanhante').value = acompanhante || '';
            document.getElementById('modal').style.display = 'block';
        }

        // Fechar modal
        function closeModal() {
            document.getElementById('modal').style.display = 'none';
        }

        window.onclick = function(event) {
            const modal = document.getElementById('modal');
            if (event.target == modal) {
                closeModal();
            }
        };

        // Busca filtro
        function searchUser() {
            let input = document.getElementById('search-bar').value.toLowerCase();
            let rows = document.querySelectorAll('#pagamentosTable tbody tr');
            rows.forEach(row => {
                let nome = row.cells[0].textContent.toLowerCase();
                row.style.display = nome.includes(input) ? '' : 'none';
            });
        }

        // Cálculo automático dos totais
        function calcularTotais() {
            let totalPix = 0;
            let totalDinheiro = 0;
            let rows = document.querySelectorAll('#pagamentosTable tbody tr');
            rows.forEach(row => {
                let forma = row.cells[1].textContent.trim();
                let valor = parseFloat(row.cells[2].textContent) || 0;
                if (forma === "PIX") totalPix += valor;
                if (forma === "Dinheiro") totalDinheiro += valor;
            });
            document.getElementById('totalPix').textContent = totalPix.toFixed(2);
            document.getElementById('totalDinheiro').textContent = totalDinheiro.toFixed(2);
        }

        calcularTotais();

        // Gerar PDF
        const { jsPDF } = window.jspdf;
        document.getElementById('btnGerarPdf').addEventListener('click', () => {
            const pagamentos = [];
            const rows = document.querySelectorAll('#pagamentosTable tbody tr');

            // Pegar nomes que aparecem como acompanhante para não repetir no PDF
            const acompanhantesNomes = new Set();
            rows.forEach(row => {
                const acompNome = row.cells[4].textContent.trim();
                if (acompNome && acompNome !== '-') {
                    acompanhantesNomes.add(acompNome);
                }
            });

            const nomesJaIncluidos = new Set();

            rows.forEach(row => {
                const nome = row.cells[0].textContent.trim();
                const forma = row.cells[1].textContent.trim();
                const valor = row.cells[2].textContent.trim();
                const acompanhante = row.cells[4].textContent.trim();

                // Se for acompanhante, não inclui separado
                if (nomesJaIncluidos.has(nome)) return;
                if (acompanhantesNomes.has(nome)) return;

                nomesJaIncluidos.add(nome);
                if (acompanhante && acompanhante !== '-') {
                    nomesJaIncluidos.add(acompanhante);
                }

                pagamentos.push({
                    nome,
                    acompanhante: (acompanhante && acompanhante !== '-') ? acompanhante : '',
                    valor,
                    forma
                });
            });

            const doc = new jsPDF();
            const pageWidth = doc.internal.pageSize.getWidth();

            doc.setFontSize(18);
            doc.text("Lista de Pagamentos e Presença", pageWidth / 2, 15, { align: "center" });

            const headers = ["Nome", "Acompanhante", "Valor (R$)", "Forma de Pagamento", "Veio?"];
            const startX = 15;
            let startY = 30;
            const rowHeight = 10;
            const colWidths = [50, 50, 30, 45, 25];

            doc.setFontSize(12);
            doc.setFillColor(230, 230, 230);
            doc.rect(startX - 2, startY - 8, colWidths.reduce((a,b) => a+b,0) + 10, rowHeight, "F");

            let x = startX;
            headers.forEach((header, i) => {
                doc.text(header, x + 2, startY);
                x += colWidths[i];
            });

            startY += rowHeight;
            pagamentos.forEach(p => {
                x = startX;
                doc.text(p.nome, x + 2, startY);
                x += colWidths[0];
                doc.text(p.acompanhante, x + 2, startY);
                x += colWidths[1];
                doc.text(p.valor.toString(), x + 2, startY);
                x += colWidths[2];
                doc.text(p.forma, x + 2, startY);
                x += colWidths[3];
                doc.rect(x + 2, startY - 6, 15, 8);
                startY += rowHeight;

                if (startY > 280) {
                    doc.addPage();
                    startY = 20;
                }
            });

            doc.save("pagamentos_presenca.pdf");
        });
    </script>
</body>
</html>
